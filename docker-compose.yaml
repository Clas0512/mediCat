version: '3.8'
services:
  postgres-master:
    build: ./database_master
    container_name: postgres-master
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - master_data:/var/lib/postgresql/data
      - ./database_master:/docker-entrypoint-initdb.d
    networks:
      - medicat_network

  postgres-slave:
    build: ./database_slave
    container_name: postgres-slave
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      REPLICATION_USER: ${REPLICATION_USER}
      REPLICATION_PASSWORD: ${REPLICATION_PASSWORD}
    depends_on:
      - postgres-master
    volumes:
      - slave_data:/var/lib/postgresql/data
    networks:
      - medicat_network

  redis:
    build: ./redis
    container_name: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data
    networks:
      - medicat_network

  rabbitmq:
    build: ./rabbitmq
    container_name: rabbitmq
    ports:
      - "${RABBITMQ1_PORT}:${RABBITMQ1_PORT}"
      - "${RABBITMQ2_PORT}:${RABBITMQ2_PORT}"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - medicat_network

  elasticsearch:
    build: ./elasticsearch
    container_name: elasticsearch
    environment:
      discovery.type: single-node
    ports:
      - "${ELASTICSEARCH_PORT}:${ELASTICSEARCH_PORT}"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - medicat_network

  logstash:
    build: ./logstash
    container_name: logstash
    ports:
      - "${LOGSTASH_PORT}:${LOGSTASH_PORT}"
    networks:
      - medicat_network
    depends_on:
      - elasticsearch

  kibana:
    build: ./kibana
    container_name: kibana
    ports:
      - "${KIBANA_PORT}:${KIBANA_PORT}"
    depends_on:
      - elasticsearch
    networks:
      - medicat_network

  filebeat:
    image: docker.elastic.co/beats/filebeat:6.5.1
    depends_on:
      - elasticsearch
    volumes:
        - ./logstash/filebeat.yml:/usr/share/filebeat/filebeat.yml
        - ./logs/:/logs/

  prometheus:
    build: ./prometheus
    container_name: prometheus
    ports:
      - "${PROMETHEUS_PORT}:${PROMETHEUS_PORT}"
    volumes:
      - prometheus_data:/prometheus
    networks:
      - medicat_network

  grafana:
    build: ./grafana
    container_name: grafana
    ports:
      - "${GRAFANA_PORT}:${GRAFANA_PORT}"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - medicat_network
    depends_on:
      - prometheus
  
  api_gateway:
    build: ./api_gateway
    container_name: api_gateway
    networks:
      - medicat_network
    ports:
    - "8083:8080"
  
  media_service:
    build: ./media_service
    container_name: media_service
    networks:
      - medicat_network
    ports:
    - "8081:8080"
  
  user_service:
    build: ./user_service
    container_name: user_service
    networks:
      - medicat_network
    ports:
    - "8084:8080"

  auth_service:
    build: ./auth_service
    container_name: auth_service
    networks:
      - medicat_network
    ports:
    - "8082:8080"

  frontend:
    build: ./frontend
    container_name: frontend
    networks:
      - medicat_network
    ports:
    - "${HTTP_PORT}:${HTTP_PORT}"
    - "${HTTPS_PORT}:${HTTPS_PORT}"
    depends_on:
    - auth_service
    - user_service
    - media_service
    - postgres-slave
    - redis

volumes:
  master_data:
  slave_data:
  redis_data:
  rabbitmq_data:
  es_data:
  prometheus_data:
  grafana_data:

networks:
  medicat_network:
    driver: bridge
